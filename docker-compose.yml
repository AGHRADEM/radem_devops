volumes:
  radem_data:
    driver: local
  radem_logs:
    driver: local

networks:
  radem_network:
    driver: bridge
  logs_network:
    driver: bridge

services:  
  radem_fluentd:
    image: fluentd
    container_name: fluentd_dev
    ports:
      - "24224:24224"
    volumes:
      - radem_logs:/tmp/logs
      - "./fluentd/fluent.conf:/fluentd/etc/fluent.conf"
    networks:
      - logs_network
    restart: unless-stopped

  radem_fetcher:
  # Service fetching the data.
  #  
  # Description:
  # * periodically fetch data available on external locations (cron job)
  #   * RADEM data (FTP connection)
  #   * IREM data (publicly available)
  # * store the data in DATA_DIR, which is shared with other containers
    build:
      context: ./fetcher
      dockerfile: Dockerfile
    container_name: fetcher_dev
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
      - FTP_URL=${FTP_URL}
      - DATA_DIR=/radem_data
    volumes:
      - radem_data:/radem_data
    restart: unless-stopped
    networks:
      - logs_network
    depends_on:
      - radem_fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "radem_fluentd:24224"
        tag: radem_fetcher

  radem_influxdb:
  # Service with the InfluxDB database.
    image: influxdb:alpine
    container_name: influxdb_dev
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - radem_data:/radem_data
    networks:
      - ${DOCKER_NETWORK_NAME}
    ports:
      - "8186:8086"
    restart: unless-stopped

  radem_publisher:
  # Service processing the raw fetched data and publishing it to the InfluxDB.
    build:
      context: ./publisher
    container_name: publisher_dev
    environment:
      INFLUXDB_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      INFLUXDB_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUXDB_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
      INFLUXDB_URL: http://radem_influxdb:8086
    volumes:
      - radem_data:/radem_data
    networks:
        - ${DOCKER_NETWORK_NAME}
    restart: unless-stopped

  radem_grafana:
  # Service with the Grafana dashboard.
    build:
      context: ./grafana
      dockerfile: Dockerfile
    image: grafana/grafana-oss
    container_name: grafana_dev
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: false
    networks:
      - ${DOCKER_NETWORK_NAME}
    ports:
      - "81:3000"
    restart: unless-stopped